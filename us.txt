CronometroON<- function(){
      tic<-proc.time()[3]
      assign(".tic", tic, envir=baseenv())
      invisible(tic)
      }

 CronometroOFF<- function(){
      tic <- get(".tic", envir=baseenv())
      toc<-proc.time()[3]-tic
      hrs<-as.integer(toc/3600)
      minu<- as.integer(((toc/3600)-hrs)*60)
      seg<- ((((((toc/3600)-hrs)*60)))-minu)*60
      time<-paste(as.character(hrs),"hrs ",as.character(minu),"min ",as.character(round(seg,digit=2)),"seg",sep="")
      return(time)
      }

library(foreign)
library(sp)
library(rgdal)
library(raster)
library(ipred)
library(caret)

library(e1071) # support vector machines
library(randomForest) # random forests
library(kknn) # kernel k-nearest neighbours
library(dismo) # boosted regression trees 
library(Cubist)

setwd("Z:\\Mario_Guevara\\004_GlobalDEM1km\\003_DEM_1km_AMERICA\\SOCmapping")
dat<-read.table ("dat.txt", sep="\t", header=T)
dat=data.frame(dat[,1:2], soc=dat[,22], top=dat[,19], dat[,30:44])
soc=dat[which(dat$top==0),]
soc$top=NULL
soc[which(soc$soc==0),]=NA
soc=na.omit(soc)
soc$soc=log(soc$soc)
cov<-read.table ("cov.txt", sep="\t", header=T)
rfTuning <- tune.randomForest(soc~., data = soc,ntree=1000, mtry=seq(from=2,to=21,by=1),
                      tunecontrol= tune.control(sampling="cross",cross=10))
save(rfTuning, file='rfTuningUSlog.RData')

rfvc <- errorest(soc~ ., data = soc,model = randomForest, ntree=1000,
               gamma=as.numeric(rfTuning$best.parameters[1]),
                  estimator="cv", est.para=control.errorest(k=10,random=TRUE,predictions=TRUE))
# root mse
rmse <- rfvc$error

# correlación
cd <- cor(soc$soc, rfvc$predictions)

# print em
rmse
cd

library(quantregForest)

mejorRF <- randomForest(soc~.,ntree=1000,
                mtry=as.numeric(rfTuning$best.parameters[1]),
                data=soc)

soc$SOC=soc$soc
soc$soc=NULL




quant_rf_model <- quantregForest(y=soc$SOC, x=soc[,1:22],ntree=1000,mtry=as.numeric(rfTuning$best.parameters[1]))



plot(quant_rf_model)




x=as.data.frame(stack('SAGAterrain.tif'), xy=T)
x$X=x$x;x$Y=x$y
x=x[,3:24]
n=names(soc[,4:23])

for(i in 1:20){
colnames(x)[i]=n[i]
}

plot(mejorRF)

predGridRF <- predict(mejorRF, newdata =x, se.fit=T)
GridRF <- data.frame(x[,c('Y','X')], RFprediction = exp(predGridRF))




pnorm(2, mean = 0, sd = 1)-pnorm(-2, mean = 0, sd = 1)
CronometroON()

pred_2sd <- predict(quant_rf_model,
                    na.omit(x[1:607202,]), # ***
                    quantiles=c((1-.954)/2, 1-(1-.954)/2))

CronometroOFF()

# Límites
UP <- data.frame(cov1[,1:2], limSup=exp(pred_2sd[,2]))
LW <- data.frame(cov1[,1:2], limInf=exp(pred_2sd[,1]))
coordinates(UP)=~X+Y
coordinates(LW)=~X+Y
gridded(UP)=T
gridded(LW)=T
UP=raster(UP)
LW=raster(LW)
# "incertidumbre"
UNCERTAINTY_2sd <- pred_2sd[,2]-pred_2sd[,1] # absolute difference
UNC <- data.frame(cov1[,1:2], UNC=UNCERTAINTY_2sd)
coordinates(UNC)=~X+Y
gridded(UNC)=T
UNC=raster(UNC)
par(mfrow=c(1,3))
plot(UP, main="Upper limit 95%")
plot(UNC, main="Uncertainty Quantile Regression Forest (Full conditional response)")
plot(LW, main="Lower limit 95%")

###
###

kmax=50

knnTuning <- train.kknn(soc~., data=soc, kmax = kmax, distance = 2, 
kernel = c("rectangular", "triangular", "epanechnikov"
,"gaussian", "rank", "optimal"),
ykernel = NULL, scale = TRUE,kcv=10)

n<-which(knnTuning$best.parameters$kernel==c("rectangular", "triangular", 
"epanechnikov","gaussian", "rank", "optimal"))

mejoresresultados <- data.matrix(unlist(knnTuning$fitted.values[[(kmax*(n-1))+knnTuning$best.parameters$k]]))
rmse <- sqrt(knnTuning$MEAN.SQU[knnTuning$best.parameters$k,n])
cd <- cor(soc$soc, mejoresresultados) 

mejorKKNN <- kknn(soc ~.,train=soc,test=cov,kernel=unlist(knnTuning$best.parameters[1]),
                        scale=TRUE,k=as.numeric(knnTuning$best.parameters[2]))



kknn=data.frame(net[,1:2],kknn=mejorKKNN$fitted.values)


coordinates(kknn)=~x+y
gridded(kknn) = TRUE
r = raster(kknn)
writeRaster(r, file='kknnUS.tif'


Alma Delia Vazquez Lu

4912838005557006
03 19
113


























