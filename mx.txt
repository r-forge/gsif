#Directorio de trabajo
setwd("Z:\\Mario_Guevara\\004_GlobalDEM1km\\003_DEM_1km_AMERICA\\SOCmapping\\sagaTerrain\\mexico")

#Paquetes necesarios
library(foreign)
library(sp)
library(rgdal)
library(raster)
library(ipred)
library(caret)

library(e1071) # support vector machines
library(randomForest) # random forests
library(kknn) # kernel k-nearest neighbours
library(dismo) # boosted regression trees 
library(Cubist)

## base de entrenamiento (etiquetada)
data<-read.table ("MXdat.txt", sep="\t", header=T)

h1=data[which(data$idH==1),]
h1=data.frame(SOC=h1$SOC, h1[,1:2], h1[,13:27])

h1[which(h1$SOC==0),]=NA
h1=na.omit(h1)
#h1$logSOC=log(h1$SOC)
names(h1)

rfTuning <- tune.randomForest(SOC~., data = h1,ntree=1000, mtry=seq(from=2,to=16,by=1),
                      tunecontrol= tune.control(sampling="cross",cross=10))


##save(rfTuning, file='rfTuning.RData')

rfvc <- errorest(SOC~ ., data =  h1,model = randomForest, ntree=1000,
               gamma=as.numeric(rfTuning$best.parameters[1]),
                estimator="cv", est.para=control.errorest(k=10,random=TRUE,predictions=TRUE))
# root mse
rmse <- rfvc$error

# correlación
cd <- cor(h1$SOC, rfvc$predictions)

# print em
rmse
cd


mejorRF <- randomForest(SOC~.,ntree=1000,
                mtry=as.numeric(rfTuning$best.parameters[1]),
                data=h1)

result <- rfcv(h_1[,1:16], h_1$soc)
result <- replicate(10, rfcv(h_1[,1:16], h_1$soc), simplify=FALSE)
 error.cv <- sapply(result, "[[", "error.cv")
 matplot(result[[1]]$n.var, cbind(rowMeans(error.cv), error.cv), type="l",
         lwd=c(2, rep(1, ncol(error.cv))), col=1, lty=1, log="x",
         xlab="Number of variables", ylab="CV Error")
 








mejorRF <- randomForest(SOC~.,ntree=1000,data=h1)

x=read.table('Z:\\Mario_Guevara\\004_GlobalDEM1km\\003_DEM_1km_AMERICA\\SOCmapping\\sagaTerrain\\mexico\\cov.txt', sep='\t', header=T)

quant_rf_model <- quantregForest(y=h1[,19], x=h1[,2:18],ntree=1000,mtry=as.numeric(rfTuning$best.parameters[1]))

plot(mejorRF)

predGridRF <- predict(mejorRF, newdata =net, se.fit=T)
# mapita
GridRF <- data.frame(net[,c('X','Y')], RFprediction = predGridRF)

coordinates(GridRF)=~X+Y

#write.table(GridRF, file='RF_MX.txt', sep='\t', col.names=T, row.names=F)

gridded(GridRF) = TRUE

# rasterize
r = raster(GridRF)
plot(r)
writeRaster(r, file='RF_MXsoc.tif')